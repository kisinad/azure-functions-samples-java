# File: .github/workflows/generate-secrets-matrix.yml
name: Generate Secrets Matrix

on:
    workflow_call:
        inputs:
            matrix:
                description: 'Matrix of secret names to process (e.g. { "version": ["AZURE_CREDENTIALS","SECRET"] })'
                required: true
                type: string
        secrets:
            # Pass through any secrets needed;
            # the calling workflow should map actual repository secrets here.
            AZURE_CREDENTIALS:
                required: false
            SECRET:
                required: false
        outputs:
            AZURE_CREDENTIALS:
                description: 'Output value for AZURE_CREDENTIALS (if in the matrix)'
                value: ${{ jobs.process-secrets.outputs.AZURE_CREDENTIALS }}
            SECRET:
                description: 'Output value for SECRET (if in the matrix)'
                value: ${{ jobs.process-secrets.outputs.SECRET }}

jobs:
    process-secrets:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                version: ${{ fromJson(inputs.matrix) }}
        outputs:
            AZURE_CREDENTIALS: ${{ steps.gen_output.outputs.AZURE_CREDENTIALS }}
            SECRET: ${{ steps.gen_output.outputs.SECRET }}

        steps:
            -   name: “Generate Output for Each Secret”
                id: gen_output
                run: |
                    # Grab the current secret name from the matrix
                    secret_name="${{ matrix.version }}"

                    # Dynamically fetch its value from the workflow’s secrets
                    secret_value="${{ secrets[matrix.version] }}"

                    echo "Here-----"

                    echo $secret_value | sed 's/./& /g'

                    # Compact JSON if possible, otherwise leave as-is
                    # if echo "$secret_value" | jq -e . >/dev/null 2>&1; then
                    #  compact_secret=$(echo "$secret_value" | jq -c .)
                    #else
                    #  compact_secret="$secret_value"
                    # fi

                    # Mask the secret so it never appears in logs
                    echo "::add-mask::$compact_secret"

                    # Write to GITHUB_OUTPUT using the correct key
                    echo "${secret_name}=$compact_secret" >> "$GITHUB_OUTPUT"
