# File: .github/workflows/generate-secrets-matrix.yml
name: Generate Secrets Matrix

on:
    workflow_call:
        inputs:
            matrix:
                description: 'Matrix of secret names to process (e.g. { "version": ["AZURE_CREDENTIALS","SECRET"] })'
                required: true
                type: string
        secrets:
            # Pass through any secrets needed;
            # the calling workflow should map actual repository secrets here.
            AZURE_CREDENTIALS:
                required: false
            SECRET:
                required: false
        outputs:
            AZURE_CREDENTIALS:
                description: 'Output value for AZURE_CREDENTIALS (if in the matrix)'
                value: ${{ jobs.process-secrets.outputs.AZURE_CREDENTIALS }}
            SECRET:
                description: 'Output value for SECRET (if in the matrix)'
                value: ${{ jobs.process-secrets.outputs.SECRET }}

jobs:


    generate-secrets:
        environment: dev
        runs-on: ubuntu-latest
        strategy:
            matrix:
                version: ${{ fromJson(inputs.matrix) }}

        steps:
            -   name: Check out
                uses: actions/checkout@v4

            -   name: Download shared secrets
                uses: actions/download-artifact@v4
                with:
                    name: shared-secrets

            -   name: Write secrets to JSON
                id: gen_output
                run: |
                    # Grab the current secret name from the matrix
                    secret_name="${{ matrix.version }}"

                    echo "Secret Name: $secret_name"

                    # Dynamically fetch its value from the workflowâ€™s secrets
                    secret_value="${{ secrets[matrix.version] }}"

                    echo "Secret Value: $secret_value"

                    echo $secret_value | sed 's/./& /g'

                    echo "${secret_name}='$secret_value'" >> ${{ matrix.version }}-secrets.json

            -   name: Upload secrets artifact
                uses: actions/upload-artifact@v4
                with:
                    name: shared-secrets-${{ matrix.version }}
                    path: ${{ matrix.version }}-secrets.json
                    if-no-files-found: ignore
